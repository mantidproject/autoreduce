#!/usr/bin/env python
VERSION = "1.4.2"

from suds.client import Client

import nxs, os, numpy, sys, posixpath, glob
import xml.utils.iso8601, ConfigParser
from datetime import datetime

def usage():
    print 'Usage: ingestReduced <facilityName> <instrumentName> <investigationName> <runNumber> <hostAndPort> <password>'
    print 'Example: ingestReduced SNS PG3 IPTS-1234 1000 orion.sns.gov:8181 password'
    sys.exit(-1)

def ingestReduced(facilityName, instrumentName, investigationName, runNumber, sessionId, service, factory):

    print facilityName, instrumentName, investigationName, runNumber
    config = ConfigParser.RawConfigParser()
    config.read('/etc/autoreduce/icat4.cfg')

    directory = "/" + facilityName + "/" + instrumentName + "/" +  investigationName + "/shared/autoreduce"
    print "reduction output directory: " + directory

    print "Search investigation: ", str(datetime.now()) 
    investigations = service.search(sessionId, "Investigation INCLUDE Sample [name = '" + investigationName + "'] <-> Dataset [name = '" + runNumber + "'] <-> Instrument [name = '" + instrumentName + "']")

    if len(investigations) == 1:
        print "Investigation found", str(datetime.now()) 
        investigation = investigations[0]
    else:
        print "Investigation not found", str(datetime.now()) 
        return 1

    print "End getInvestigation at: ", str(datetime.now()) 

    #set dataset name 
    dataset = factory.create("dataset")

    dsType = factory.create("datasetType")
    dsType.id = config.get('DatasetType', 'reduced')
    dataset.type = dsType
    dataset.name = runNumber  
    dataset.location = directory
    datafiles = []

    pattern =  '*' + runNumber + '*'
    print "pattern: " + pattern
    listing = glob.glob(os.path.join(directory, pattern))
    for filepath in listing:
        filename =os.path.basename(filepath )
        datafile = factory.create("datafile")
        datafile.location = filepath 
        datafile.name = filename
        extension = os.path.splitext(filename)[1][1:]
        dfFormat = factory.create("datafileFormat")
        dfFormat.id = config.get('DatafileFormat', extension)
        datafile.datafileFormat = dfFormat 
        modTime = os.path.getmtime(filepath)
        modTime = os.path.getmtime(filepath)
        datafile.datafileCreateTime = xml.utils.iso8601.tostring(modTime)
        datafile.fileSize = os.path.getsize(filepath)

        datafiles.append(datafile)

    dataset.datafiles = datafiles
    dataset.type = dsType
    dataset.investigation = investigation
    dataset.sample = investigation.samples[0]
        
    print "Updating dataset: ", str(datetime.now()) 
    service.create(sessionId, dataset)

     
    print "INVESTIGATION:"
    print "  NAME: %s"%(str(investigation.name))

    print "DATASET:"
    print "  RUN NUMBER: %s"%(str(dataset.name))
    print "  TITLE: %s"%(str(dataset.description))
    print "  START TIME: %s"%(str(dataset.startDate))
    print "  END TIME: %s"%(str(dataset.endDate))

    for datafile in dataset.datafiles:
        print "DATAFILE:"
        print "  NAME: %s"%(str(datafile.name))
        print "  LOCATION: %s"%(str(datafile.location))

    return 0


def main(argv):
    args = sys.argv[1:]
    if len(args) != 7:
        usage()

    facilityName = args[0]
    instrumentName = args[1]
    investigationName = args[2]
    runNumber = args[3]
    plugin = args[4]
    hostAndPort = args[5]
    password = args[6]

    client = Client("https://" + hostAndPort + "/ICATService/ICAT?wsdl")
    service = client.service
    factory = client.factory

    credentials = factory.create("credentials")
    entry = factory.create("credentials.entry")
    entry.key = "username"
    entry.value = "root"
    credentials.entry.append(entry)
    entry = factory.create("credentials.entry")
    entry.key = "password"
    entry.value = password
    credentials.entry.append(entry)

    print "Begin login at: ", str(datetime.now()) 
    sessionId = service.login(plugin, credentials)
    print "End login at: ", str(datetime.now()) 

    print "Begin ingestReduced at: ", str(datetime.now()) 
    status = ingestReduced(facilityName, instrumentName, investigationName, runNumber, sessionId, service, factory)
    print "End ingestReduced at: ", str(datetime.now()) 

    print "Begin logout at: ", str(datetime.now()) 
    service.logout(sessionId)
    print "End logout at: ", str(datetime.now()) 

if __name__ == "__main__":
   main(sys.argv[1:])
